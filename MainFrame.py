# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Sun Aug 19 21:56:50 2012 from "/home/nik/document/plants/plants.wxg"

import wx

# begin wxGlade: dependencies
import sys
# end wxGlade

# begin wxGlade: extracode
from AddDialog import AddDialog
from DataBase import DataBase
from MainGrid import MainGrid
# end wxGlade

reload(sys)
sys.setdefaultencoding('utf-8')


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.icon = wx.Icon('icon.ico', wx.BITMAP_TYPE_ICO)
        self.SetIcon(self.icon)
        # Menu Bar
        self.mainMenuBar = wx.MenuBar()
        self.menuFile = wx.Menu()
        self.menuNew = wx.MenuItem(self.menuFile, wx.NewId(), u"新寄养(&N)", u"新寄养", wx.ITEM_NORMAL)
        self.menuFile.AppendItem(self.menuNew)
        self.menuFile.AppendSeparator()
        self.menuExit = wx.MenuItem(self.menuFile, wx.NewId(), u"退出(&X)", u"退出", wx.ITEM_NORMAL)
        self.menuFile.AppendItem(self.menuExit)
        self.mainMenuBar.Append(self.menuFile, u"文件(&F)")
        self.menuHelp = wx.Menu()
        self.menuAbout = wx.MenuItem(self.menuHelp, wx.NewId(), u"关于(&A)", u"关于", wx.ITEM_NORMAL)
        self.menuHelp.AppendItem(self.menuAbout)
        self.mainMenuBar.Append(self.menuHelp, u"帮助(&H)")
        self.SetMenuBar(self.mainMenuBar)
        # Menu Bar end
        self.mainStatusBar = self.CreateStatusBar(1, wx.ST_SIZEGRIP)
        self.mainGrid = MainGrid(self)
        self.mainGrid.setColWidthProportions([0.06, 0.08, 0.1, 0.12, 0.17, 0.27, 0.2])
        self.labelSearch = wx.StaticText(self, -1, u"电话号码搜索：")
        self.txtSearch = wx.TextCtrl(self, -1, "")
        self.btnSearch = wx.Button(self, -1, u"搜索(&S)")
        self.labelPage = wx.StaticText(self, -1, u"共9页 当前第2页")
        self.btnPrev = wx.Button(self, -1, u"上一页")
        self.btnNext = wx.Button(self, -1, u"下一页")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.onAddNew, self.menuNew)
        self.Bind(wx.EVT_MENU, self.onExit, self.menuExit)
        self.Bind(wx.EVT_MENU, self.onAbout, self.menuAbout)
        self.Bind(wx.EVT_BUTTON, self.onNext, self.btnNext)
        self.Bind(wx.EVT_BUTTON, self.onPrev, self.btnPrev)
        self.Bind(wx.EVT_BUTTON, self.onSearch, self.btnSearch)

        self.page = 1
        self.searchPage = 1
        self.isSearch = False
        self.loadData()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle(u"花木寄养管理系统 v0.1 - MLN Studio")
        self.mainStatusBar.SetStatusWidths([-1])
        # statusbar fields
        mainStatusBar_fields = [u"花木寄养管理系统"]
        for i in range(len(mainStatusBar_fields)):
            self.mainStatusBar.SetStatusText(mainStatusBar_fields[i], i)

        #self.mainGrid.AutoSizeColumns(False)
        self.mainGrid.CreateGrid(DataBase().numberOfPage, 7)
        self.mainGrid.EnableEditing(0)
        self.mainGrid.EnableDragRowSize(0)
        self.mainGrid.SetSelectionMode(wx.grid.Grid.wxGridSelectRows)
        self.mainGrid.SetColLabelValue(0, u"编号")
        self.mainGrid.SetColLabelValue(1, u"姓名")
        self.mainGrid.SetColLabelValue(2, u"花木品种")
        self.mainGrid.SetColLabelValue(3, u"电话")
        self.mainGrid.SetColLabelValue(4, u"寄养日期")
        self.mainGrid.SetColLabelValue(5, u"地址")
        self.mainGrid.SetColLabelValue(6, u"寄养时状况")
        self.mainGrid.SetMinSize((800, 300))
        self.mainGrid.SetCellHighlightPenWidth(0)
        self.mainGrid.SetRowLabelSize(30)
        self.txtSearch.SetMinSize((200, -1))
        self.btnSearch.SetMinSize((60, -1))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        mainSizer = wx.BoxSizer(wx.VERTICAL)
        controlSizer = wx.BoxSizer(wx.HORIZONTAL)
        mainSizer.Add(self.mainGrid, 1, wx.EXPAND, 2)
        controlSizer.Add(self.labelSearch, 0, wx.ALL, 5)
        controlSizer.Add(self.txtSearch, 1, wx.LEFT, 5)
        controlSizer.Add(self.btnSearch, 0, wx.LEFT, 5)
        controlSizer.Add((0, 0), 1, wx.EXPAND, 0)
        controlSizer.Add(self.labelPage, 0, wx.ALL, 5)
        controlSizer.Add(self.btnPrev, 0, 0, 0)
        controlSizer.Add(self.btnNext, 0, wx.LEFT | wx.RIGHT, 5)
        mainSizer.Add(controlSizer, 0, wx.ALL | wx.EXPAND, 5)
        self.SetSizer(mainSizer)
        mainSizer.Fit(self)
        self.Layout()
        mainSize = self.GetSize()
        self.SetMinSize(mainSize)
        self.mainGrid.fixWidth()
        # end wxGlade

    def loadData(self, page=None):
        self.mainGrid.ClearGrid()
        dataBase = DataBase()
        if None == page:
            page = self.page
        self.page = page
        self.pageNumber = dataBase.getPage()
        self.btnNext.Enable(True)
        self.btnPrev.Enable(True)
        self.labelPage.SetLabel(u"共%s页 当前第%s页" % (self.pageNumber, page))

        if self.pageNumber == page:
            self.btnNext.Enable(False)
        if page == 1:
            self.btnPrev.Enable(False)

        cur = dataBase.fetch(page)
        data = cur.fetchall()

        #此页没有数据，加载上一页
        if len(data) <= 0 and page > 1:
            self.loadData(page - 1)

        row = 0
        cell = -1
        for item in data:
            for value in item:
                if cell == -1:
                    cell = cell + 1
                    self.mainGrid.setRowAttachmentData(row, value)
                    continue
                self.mainGrid.SetCellValue(row, cell, "%s" % value)
                cell = cell + 1
            cell = -1
            row = row + 1
        row = 0
        self.mainGrid.Refresh()

    def loadFindData(self, telephone=None, page=None):
        self.mainGrid.ClearGrid()
        dataBase = DataBase()
        if None == telephone:
            telephone = self.searchText
        if None == page:
            page = self.searchPage
        self.searchPage = page
        self.pageNumber = dataBase.getFindPage(telephone)
        self.btnNext.Enable(True)
        self.btnPrev.Enable(True)
        self.labelPage.SetLabel(u"共%s页 当前第%s页" % (self.pageNumber, page))

        if self.pageNumber == page:
            self.btnNext.Enable(False)
        if page == 1:
            self.btnPrev.Enable(False)

        cur = dataBase.find(telephone, page)
        data = cur.fetchall()

        #此页没有数据，加载上一页
        if len(data) <= 0 and page > 1:
            print telephone
            self.loadFindData(telephone, page - 1)

        row = 0
        cell = -1
        for item in data:
            for value in item:
                if cell == -1:
                    cell = cell + 1
                    self.mainGrid.setRowAttachmentData(row, value)
                    continue
                self.mainGrid.SetCellValue(row, cell, "%s" % value)
                cell = cell + 1
            cell = -1
            row = row + 1
        row = 0
        self.mainGrid.Refresh()

    def onAddNew(self, event):  # wxGlade: MainFrame.<event_handler>
        addDialog = AddDialog(self)
        addDialog.ShowModal()
        addDialog.Destroy()

    def onNext(self, event):
        event.Skip()
        if True == self.isSearch:
            self.loadFindData(self.searchText, self.searchPage + 1)
        else:
            self.loadData(self.page + 1)

    def onPrev(self, event):
        event.Skip()
        if True == self.isSearch:
            self.loadFindData(self.searchText, self.searchPage - 1)
        else:
            self.loadData(self.page - 1)

    def onSearch(self, event):
        event.Skip()
        if False == self.isSearch:
            self.searchText = self.txtSearch.GetValue().strip()
            if len(self.searchText) == 0:
                alert = wx.MessageDialog(self, u"查询内容不得为空！", u"查询失败", wx.OK | wx.CENTER)
                alert.ShowModal()
                alert.Destroy()
                return None
            else:
                self.isSearch = True
                self.loadFindData(self.searchText)
                self.btnSearch.SetLabel(u"重置(&C)")
        else:
            self.isSearch = False
            self.searchText = ''
            self.searchPage = 1
            self.txtSearch.SetValue(u"")
            self.btnSearch.SetLabel(u"搜索(&S)")
            self.loadData()

    def onExit(self, event):
        event.Skip()
        self.Close()
        self.Destroy()

    def onAbout(self, event):
        message = u"花木寄养管理系统 v0.1 \n Powered by Nik Sun from MLN Studio in 2012 \n"
        dialog = wx.MessageDialog(self, message, u"关于", wx.OK | wx.CENTER)
        dialog.ShowModal()
        dialog.Destroy()


# end of class MainFrame
